@page "/time/tasks/{projectId}"
@inject ITaskService taskService
@attribute [Authorize]

<h3>Tasks</h3>

<br />

@if (tasks == null)
{
    <text>Loading...</text>
}
else if (tasks.Length == 0)
{
    <text>No Tasks Found</text>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Title</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in tasks)
            {
                <tr>
                    <td>@task.Title</td>
                    <td>
                        <a class="btn btn-success" href="time/create/@task.Id">Add Time</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    [Parameter] public string projectId { get; set; }
    private TaskDto[] tasks;

    protected async override Task OnParametersSetAsync()
    {
        tasks = await taskService.GetByProjectId(projectId);
    }
}
